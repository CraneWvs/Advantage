# Generated by Django 4.1 on 2023-07-20 19:07

from django.db import migrations
import json
from main.models import Zone, ZoneDetail
from datetime import datetime
from django.utils.timezone import make_aware
import json

class Migration(migrations.Migration):

    def history_populate(apps, schema_editor):
        """Populate the historical impression with processed data"""
        with open('../data-ingestions/draft_impression.json', 'r') as fd:    
            data = json.load(fd)
        for row in data:
            
        # taxi_zone = Zone.objects.get(id=row['taxi_zone'])
            try: 
                datestr = row['datetime']
                # print(type(datestr))
                busydatetime = datetime.strptime(datestr, '%Y-%m-%d %H:%M:%S')
                # print(type(datetime))
                taxi_zone = Zone.objects.only('id').get(id=row['taxi_zone'])
                # if Impression.objects.filter(taxi_zone__id=row['taxi_zone'],datetime=make_aware(busydatetime)).exists():
                #     pass
                # else:
                zone_detail = ZoneDetail.objects.create(
                    datetime=make_aware(busydatetime), 
                    taxi_zone=taxi_zone,
                    impression_history = row['passenger_count'],
                    year_month = row['year_month'],
                    week = row['week'],
                    hour = row['hour'],
                    entertainment_and_recreation = row['entertainment_and_recreation'],
                    financial_services = row['financial_services'],
                    food_and_beverage = row['food_and_beverage'],
                    parking_and_automotive_services = row['parking_and_automotive_services'],
                    professional_services = row['professional_services'],
                    real_estate = row['real_estate'],
                    retail_services = row['retail_services'],
                    transportation = row['transportation'],
                    hospital = row['hospital'],
                    hotspots = row['hotspots'],
                    school = row['school'],
                    total_business = row['total_business'],
                    holiday = row['holiday']
                )
                zone_detail.save()
                print("Taxi zone",row['taxi_zone'],"Time",row['datetime'],"is imported to database")
            except Exception as e:
                print(e)
                print("Taxi zone",row['taxi_zone'],"Time",row['datetime'],"cannot be imported to database")
    # break 

    dependencies = [
        ('main', '0006_history_2023_04_30_22'),
    ]

    operations = [
        migrations.RunPython(history_populate),
    ]

    